{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "liquid-metal-button",
  "type": "registry:ui",
  "title": "Liquid Metal Button",
  "description": "A button with a futuristic liquid metal shader effect that simulates dynamic surface distortion.",
  "dependencies": [
    "@paper-design/shaders-react"
  ],
  "files": [
    {
      "path": "registry/magicui/liquid-metal-button.tsx",
      "content": "import React from \"react\"\nimport { LiquidMetal } from \"@paper-design/shaders-react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst liquidMetalButtonVariants = cva(\n  cn(\n    \"relative cursor-pointer group transition-all overflow-hidden\",\n    \"inline-flex items-center justify-center gap-2 shrink-0\",\n    \"rounded-lg outline-none focus-visible:ring-[3px] aria-invalid:border-destructive\",\n    \"text-sm font-medium whitespace-nowrap\",\n    \"disabled:pointer-events-none disabled:opacity-50\",\n    \"[&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 [&_svg]:shrink-0\"\n  ),\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-0 shadow-[0_0_0_1px_rgba(255,255,255,0.1),0_2px_4px_rgba(0,0,0,0.1)] text-primary-foreground dark:shadow-[0_0_0_1px_rgba(255,255,255,0.15),0_2px_8px_rgba(0,0,0,0.3)] dark:text-primary\",\n        outline: \"border border-input text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-6 py-2\",\n        sm: \"h-8 rounded-md px-4 text-xs\",\n        lg: \"h-12 rounded-xl px-8 text-base\",\n        icon: \"size-10 rounded-lg\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\ninterface LiquidMetalButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof liquidMetalButtonVariants> {\n  asChild?: boolean\n  colorBack?: string\n  colorTint?: string\n  repetition?: number\n  softness?: number\n  shiftRed?: number\n  shiftBlue?: number\n  distortion?: number\n  contour?: number\n  shape?: \"none\" | \"circle\" | \"daisy\" | \"metaballs\"\n  speed?: number\n  scale?: number\n}\n\nconst LiquidMetalButton = React.forwardRef<\n  HTMLButtonElement,\n  LiquidMetalButtonProps\n>(\n  (\n    {\n      className,\n      variant,\n      size,\n      asChild = false,\n      colorBack,\n      colorTint,\n      repetition = 4,\n      softness = 0.3,\n      shiftRed = 0.3,\n      shiftBlue = 0.3,\n      distortion = 0.1,\n      contour = 1,\n      shape = \"none\",\n      speed = 1,\n      scale = 2,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const defaultColorBack = \"#0a0a0a\"\n    const defaultColorTint = \"#ffffff\"\n\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        data-slot=\"button\"\n        className={cn(liquidMetalButtonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      >\n        <div className=\"absolute inset-0 overflow-hidden rounded-[inherit]\">\n          <LiquidMetal\n            width=\"100%\"\n            height=\"100%\"\n            colorBack={colorBack ?? defaultColorBack}\n            colorTint={colorTint ?? defaultColorTint}\n            repetition={repetition}\n            softness={softness}\n            shiftRed={shiftRed}\n            shiftBlue={shiftBlue}\n            distortion={distortion}\n            contour={contour}\n            shape={shape}\n            speed={speed}\n            scale={scale}\n          />\n        </div>\n        <span className=\"relative z-10\">{children}</span>\n      </Comp>\n    )\n  }\n)\n\nLiquidMetalButton.displayName = \"LiquidMetalButton\"\n\nexport {\n  LiquidMetalButton,\n  liquidMetalButtonVariants,\n  type LiquidMetalButtonProps,\n}\n",
      "type": "registry:ui"
    }
  ]
}