{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "animated-tags",
  "type": "registry:ui",
  "title": "Animated Tags",
  "description": "An animated component to select and deselect tags, perfect for filtering or categorization.",
  "dependencies": [
    "motion",
    "lucide-react"
  ],
  "files": [
    {
      "path": "registry/magicui/animated-tags.tsx",
      "content": "\"use client\";\n\nimport { useState } from \"react\";\nimport { CircleX, Plus } from \"lucide-react\";\nimport { AnimatePresence, motion } from \"motion/react\";\n\nexport interface AnimatedTagsProps {\n  initialTags?: string[];\n  selectedTags?: string[];\n  onChange?: (selected: string[]) => void;\n  className?: string;\n}\n\nexport default function AnimatedTags({\n  initialTags = [\"python\", \"javascript\", \"c++\"],\n  selectedTags: controlledSelectedTags,\n  onChange,\n  className = \"\",\n}: AnimatedTagsProps) {\n  const [uncontrolledSelectedTags, setUncontrolledSelectedTags] = useState<\n    string[]\n  >([]);\n\n  const currentSelectedTags =\n    controlledSelectedTags ?? uncontrolledSelectedTags;\n\n  const availableTags = initialTags.filter(\n    (tag) => !currentSelectedTags.includes(tag),\n  );\n\n  const handleSelectTag = (tag: string) => {\n    const newSelection = [...currentSelectedTags, tag];\n    if (onChange) {\n      onChange(newSelection);\n    } else {\n      setUncontrolledSelectedTags(newSelection);\n    }\n  };\n\n  const handleRemoveTag = (tag: string) => {\n    const newSelection = currentSelectedTags.filter(\n      (selected) => selected !== tag,\n    );\n    if (onChange) {\n      onChange(newSelection);\n    } else {\n      setUncontrolledSelectedTags(newSelection);\n    }\n  };\n\n  return (\n    <div className={`flex w-[300px] flex-col gap-4 p-4 ${className}`}>\n      <div className=\"flex flex-col items-start justify-center gap-1\">\n        <p id=\"selected-tags-label\" className=\"text-foreground\">\n          Chosen Tags\n        </p>\n        <AnimatePresence>\n          <ul\n            aria-labelledby=\"selected-tags-label\"\n            className=\"bg-background flex min-h-12 w-full flex-wrap items-center gap-1 rounded-xl border border-border p-2\"\n          >\n            {currentSelectedTags?.map((tag) => (\n              <motion.li\n                key={tag}\n                onClick={() => handleRemoveTag(tag)}\n                layout\n                initial={{ y: 20, opacity: 0, filter: \"blur(4px)\" }}\n                animate={{\n                  y: 0,\n                  opacity: 1,\n                  filter: \"blur(0px)\",\n                }}\n                exit={{ y: 20, opacity: 0, filter: \"blur(4px)\" }}\n                transition={{ duration: 0.3, bounce: 0, type: \"spring\" }}\n                className=\"group bg-primary text-primary-foreground hover:bg-primary/90 flex cursor-pointer flex-row items-center justify-center gap-2 rounded-md border border-primary px-2 py-1 transition-colors\"\n              >\n                {tag}{\" \"}\n                <CircleX\n                  size={16}\n                  className=\"flex items-center justify-center rounded-full transition-all duration-300 ease-in-out group-hover:text-red-400\"\n                />\n              </motion.li>\n            ))}\n          </ul>\n        </AnimatePresence>\n      </div>\n\n      <AnimatePresence>\n        <ul\n          aria-labelledby=\"available-tags-label\"\n          className=\"flex flex-wrap items-center gap-1\"\n        >\n          {availableTags.map((tag, idx) => (\n            <motion.li\n              layout\n              key={idx}\n              className=\"group bg-secondary text-secondary-foreground hover:bg-secondary/80 hover:text-foreground flex cursor-pointer flex-row items-center justify-center gap-2 rounded-md border border-border px-2 py-1 transition-colors\"\n              onClick={() => handleSelectTag(tag)}\n              initial={{ y: -20, opacity: 0, filter: \"blur(4px)\" }}\n              animate={{\n                y: 0,\n                opacity: 1,\n                filter: \"blur(0px)\",\n              }}\n              exit={{ y: -20, opacity: 0, filter: \"blur(4px)\" }}\n              transition={{ duration: 0.3, bounce: 0, type: \"spring\" }}\n            >\n              {tag}{\" \"}\n              <Plus\n                size={16}\n                className=\"flex items-center justify-center rounded-full transition-all duration-300 ease-in-out group-hover:text-primary\"\n              />\n            </motion.li>\n          ))}\n        </ul>\n      </AnimatePresence>\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/magicui/animated-tags.tsx"
    }
  ]
}