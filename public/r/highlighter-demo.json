{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "highlighter-demo",
  "type": "registry:example",
  "title": "Highlighter Demo",
  "description": "Example showing the demo of a Highlighter",
  "dependencies": [
    "rough-notation"
  ],
  "registryDependencies": [
    "https://magicui.design/r/highlighter"
  ],
  "files": [
    {
      "path": "registry/example/highlighter-demo.tsx",
      "content": "import Highlighter from \"@/components/magicui/highlighter\";\n\nexport default function HighlighterDemo() {\n  return (\n    <div className=\"relative justify-center\">\n      <p className=\"w-full text-center\">\n        This is <Highlighter color=\"#FF9800\"> Magic UI Highlighter</Highlighter>{\" \"}\n        component, designed to make important text stand out effortlessly.\n        Customize colors, actions, and styles to fit your needs.{\" \"}\n        <Highlighter color=\"#FFC107\" action=\"circle\">\n          Try it out now!\n        </Highlighter>\n      </p>\n    </div>\n  );\n}\n",
      "type": "registry:example",
      "target": "components/highlighter-demo.tsx"
    },
    {
      "path": "registry/magicui/highlighter.tsx",
      "content": "\"use client\";\n\nimport { useEffect, useRef } from \"react\";\nimport { annotate } from \"rough-notation\";\nimport type { RoughAnnotation } from \"rough-notation/lib/model\";\nimport type React from \"react\";\n\ninterface HighlighterProps {\n  children: React.ReactNode;\n  action?: \"highlight\" | \"circle\";\n  color?: string;\n}\n\nexport default function Highlighter({\n  children,\n  action = \"highlight\",\n  color = \"#ffd1dc\", // Default pink color\n}: HighlighterProps) {\n  const elementRef = useRef<HTMLSpanElement>(null);\n  const annotationRef = useRef<RoughAnnotation | null>(null);\n\n  useEffect(() => {\n    if (elementRef.current) {\n      const annotation = annotate(elementRef.current, {\n        type: action === \"circle\" ? \"circle\" : \"highlight\",\n        color: color,\n        multiline: true,\n        padding: action === \"circle\" ? 8 : 2,\n        iterations: 2, // More iterations for a natural effect\n        animationDuration: 500,\n      });\n\n      annotationRef.current = annotation;\n      annotation.show();\n    }\n\n    return () => {\n      annotationRef.current?.remove();\n    };\n  }, [action, color, elementRef.current]); // Added elementRef.current dependency\n\n  return (\n    <span ref={elementRef} className=\"relative inline-block bg-transparent\">\n      {children}\n    </span>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/magicui/highlighter.tsx"
    }
  ]
}