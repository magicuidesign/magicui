{
  "name": "icon-cloud",
  "type": "registry:ui",
  "dependencies": [
    "next-themes",
    "react-icon-cloud"
  ],
  "files": [
    {
      "path": "magicui/icon-cloud.tsx",
      "content": "\"use client\";\n\nimport { useEffect, useMemo, useState } from \"react\";\nimport { useTheme } from \"next-themes\";\nimport {\n  Cloud,\n  fetchSimpleIcons,\n  ICloud,\n  renderSimpleIcon,\n  SimpleIcon,\n} from \"react-icon-cloud\";\n\nexport const cloudProps: Omit<ICloud, \"children\"> = {\n  containerProps: {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      width: \"100%\",\n      paddingTop: 40,\n    },\n  },\n  options: {\n    reverse: true,\n    depth: 1,\n    wheelZoom: false,\n    imageScale: 2,\n    activeCursor: \"default\",\n    tooltip: \"native\",\n    initial: [0.1, -0.1],\n    clickToFront: 500,\n    tooltipDelay: 0,\n    outlineColour: \"#0000\",\n    maxSpeed: 0.04,\n    minSpeed: 0.02,\n    // dragControl: false,\n  },\n};\n\nexport const renderCustomIcon = (icon: SimpleIcon, theme: string) => {\n  const bgHex = theme === \"light\" ? \"#f3f2ef\" : \"#080510\";\n  const fallbackHex = theme === \"light\" ? \"#6e6e73\" : \"#ffffff\";\n  const minContrastRatio = theme === \"dark\" ? 2 : 1.2;\n\n  return renderSimpleIcon({\n    icon,\n    bgHex,\n    fallbackHex,\n    minContrastRatio,\n    size: 42,\n    aProps: {\n      href: undefined,\n      target: undefined,\n      rel: undefined,\n      onClick: (e: any) => e.preventDefault(),\n    },\n  });\n};\n\nexport type DynamicCloudProps = {\n  iconSlugs: string[];\n};\n\ntype IconData = Awaited<ReturnType<typeof fetchSimpleIcons>>;\n\nexport default function IconCloud({ iconSlugs }: DynamicCloudProps) {\n  const [data, setData] = useState<IconData | null>(null);\n  const { theme } = useTheme();\n\n  useEffect(() => {\n    fetchSimpleIcons({ slugs: iconSlugs }).then(setData);\n  }, [iconSlugs]);\n\n  const renderedIcons = useMemo(() => {\n    if (!data) return null;\n\n    return Object.values(data.simpleIcons).map((icon) =>\n      renderCustomIcon(icon, theme || \"light\"),\n    );\n  }, [data, theme]);\n\n  return (\n    // @ts-ignore\n    <Cloud {...cloudProps}>\n      <>{renderedIcons}</>\n    </Cloud>\n  );\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}