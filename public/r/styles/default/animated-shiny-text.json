{
  "name": "animated-shiny-text",
  "type": "registry:ui",
  "files": [
    {
      "path": "magicui/animated-shiny-text.tsx",
      "content": "import { CSSProperties, FC, ReactNode } from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\ninterface AnimatedShinyTextProps {\n  children: ReactNode;\n  className?: string;\n  shimmerWidth?: number;\n}\n\nconst AnimatedShinyText: FC<AnimatedShinyTextProps> = ({\n  children,\n  className,\n  shimmerWidth = 100,\n}) => {\n  return (\n    <p\n      style={\n        {\n          \"--shiny-width\": `${shimmerWidth}px`,\n        } as CSSProperties\n      }\n      className={cn(\n        \"mx-auto max-w-md text-neutral-600/70 dark:text-neutral-400/70\",\n\n        // Shine effect\n        \"animate-shiny-text bg-clip-text bg-no-repeat [background-position:0_0] [background-size:var(--shiny-width)_100%] [transition:background-position_1s_cubic-bezier(.6,.6,0,1)_infinite]\",\n\n        // Shine gradient\n        \"bg-gradient-to-r from-transparent via-black/80 via-50% to-transparent  dark:via-white/80\",\n\n        className,\n      )}\n    >\n      {children}\n    </p>\n  );\n};\n\nexport default AnimatedShinyText;\n",
      "type": "registry:ui",
      "target": ""
    }
  ],
  "tailwind": {
    "config": {
      "theme": {
        "extend": {
          "animation": {
            "shiny-text": "shiny-text 8s infinite"
          },
          "keyframes": {
            "shiny-text": {
              "0%, 90%, 100%": {
                "background-position": "calc(-100% - var(--shiny-width)) 0"
              },
              "30%, 60%": {
                "background-position": "calc(100% + var(--shiny-width)) 0"
              }
            }
          }
        }
      }
    }
  }
}