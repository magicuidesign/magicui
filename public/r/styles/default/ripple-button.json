{
  "name": "ripple-button",
  "type": "registry:ui",
  "files": [
    {
      "path": "magicui/ripple-button.tsx",
      "content": "\"use client\";\n\nimport React, { useState, useEffect, MouseEvent } from \"react\";\nimport { cn } from \"@/lib/utils\";\n\ninterface RippleButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  rippleColor?: string;\n  duration?: string;\n}\n\nexport default function RippleButton({\n  className,\n  children,\n  rippleColor = \"#ffffff\",\n  duration = \"600ms\",\n  ...props\n}: RippleButtonProps) {\n  const [buttonRipples, setButtonRipples] = useState<\n    Array<{ x: number; y: number; size: number; key: number }>\n  >([]);\n\n  const createRipple = (event: MouseEvent<HTMLButtonElement>) => {\n    const button = event.currentTarget;\n    const rect = button.getBoundingClientRect();\n    const size = Math.max(rect.width, rect.height);\n    const x = event.clientX - rect.left - size / 2;\n    const y = event.clientY - rect.top - size / 2;\n\n    const newRipple = { x, y, size, key: Date.now() };\n    setButtonRipples((prevRipples) => [...prevRipples, newRipple]);\n  };\n\n  useEffect(() => {\n    if (buttonRipples.length > 0) {\n      const lastRipple = buttonRipples[buttonRipples.length - 1];\n      const timeout = setTimeout(() => {\n        setButtonRipples((prevRipples) =>\n          prevRipples.filter((ripple) => ripple.key !== lastRipple.key),\n        );\n      }, parseInt(duration));\n      return () => clearTimeout(timeout);\n    }\n  }, [buttonRipples, duration]);\n\n  return (\n    <button\n      className={cn(\n        \"relative overflow-hidden text-center cursor-pointer flex justify-center items-center rounded-lg text-white bg-black-500 px-4 py-2 border-2\",\n        className,\n      )}\n      onClick={createRipple}\n      {...props}\n    >\n      <div className=\"relative z-10\">{children}</div>\n      <span className=\"absolute inset-0 pointer-events-none\">\n        {buttonRipples.map((ripple) => (\n          <span\n            className=\"absolute animate-rippling bg-white opacity-30 rounded-full\"\n            key={ripple.key}\n            style={{\n              width: `${ripple.size}px`,\n              height: `${ripple.size}px`,\n              top: `${ripple.y}px`,\n              left: `${ripple.x}px`,\n              backgroundColor: rippleColor,\n              transform: `scale(0)`,\n            }}\n          />\n        ))}\n      </span>\n    </button>\n  );\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ],
  "tailwind": {
    "config": {
      "theme": {
        "extend": {
          "animation": {
            "rippling": "rippling var(--duration) ease-out"
          },
          "keyframes": {
            "rippling": {
              "0%": {
                "opacity": "1"
              },
              "100%": {
                "transform": "scale(2)",
                "opacity": "0"
              }
            }
          }
        }
      }
    }
  }
}