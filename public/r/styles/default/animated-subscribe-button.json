{
  "name": "animated-subscribe-button",
  "type": "registry:ui",
  "dependencies": [
    "motion"
  ],
  "files": [
    {
      "path": "magicui/animated-subscribe-button.tsx",
      "content": "\"use client\";\n\nimport { HTMLMotionProps } from \"motion/react\";\nimport { AnimatePresence, motion } from \"motion/react\";\nimport React, { useState } from \"react\";\n\ninterface AnimatedSubscribeButtonProps extends HTMLMotionProps<\"button\"> {\n  buttonColor: string;\n  buttonTextColor?: string;\n  subscribeStatus: boolean;\n  initialText: React.ReactElement | string;\n  changeText: React.ReactElement | string;\n  ref?: React.Ref<HTMLButtonElement>;\n}\n\nexport const AnimatedSubscribeButton = React.forwardRef<\n  HTMLButtonElement,\n  AnimatedSubscribeButtonProps\n>(\n  (\n    {\n      buttonColor,\n      subscribeStatus,\n      buttonTextColor,\n      changeText,\n      initialText,\n      onClick,\n      ...props\n    },\n    ref\n  ) => {\n    const [isSubscribed, setIsSubscribed] = useState<boolean>(subscribeStatus);\n\n    return (\n      <AnimatePresence mode=\"wait\">\n        {isSubscribed ? (\n          <motion.button\n            ref={ref}\n            className=\"relative flex h-10 w-[200px] items-center justify-center overflow-hidden rounded-md bg-white outline outline-1 outline-black\"\n            onClick={(e: React.MouseEvent<HTMLButtonElement>) => {\n              setIsSubscribed(false);\n              onClick?.(e);\n            }}\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            {...props}\n          >\n            <motion.span\n              ref={ref}\n              key=\"action\"\n              className=\"relative flex h-full w-full items-center justify-center font-semibold\"\n              initial={{ y: -50 }}\n              animate={{ y: 0 }}\n              style={{ color: buttonColor }}\n            >\n              {changeText}\n            </motion.span>\n          </motion.button>\n        ) : (\n          <motion.button\n            className=\"relative flex h-10 w-[200px] cursor-pointer items-center justify-center rounded-md border-none\"\n            style={{ backgroundColor: buttonColor, color: buttonTextColor }}\n            onClick={(e) => {\n              setIsSubscribed(true);\n              onClick?.(e);\n            }}\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            {...props}\n          >\n            <motion.span\n              key=\"reaction\"\n              className=\"relative flex items-center justify-center font-semibold\"\n              initial={{ x: 0 }}\n              exit={{ x: 50, transition: { duration: 0.1 } }}\n            >\n              {initialText}\n            </motion.span>\n          </motion.button>\n        )}\n      </AnimatePresence>\n    );\n  }\n);\n\nAnimatedSubscribeButton.displayName = \"AnimatedSubscribeButton\";\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}