{
  "name": "box-reveal",
  "type": "registry:ui",
  "dependencies": [
    "framer-motion"
  ],
  "files": [
    {
      "path": "magicui/box-reveal.tsx",
      "content": "\"use client\";\n\nimport { useEffect, useRef } from \"react\";\nimport { motion, useAnimation, useInView } from \"framer-motion\";\n\ninterface BoxRevealProps {\n  children: JSX.Element;\n  width?: \"fit-content\" | \"100%\";\n  boxColor?: string;\n  duration?: number;\n}\n\nexport const BoxReveal = ({\n  children,\n  width = \"fit-content\",\n  boxColor,\n  duration,\n}: BoxRevealProps) => {\n  const mainControls = useAnimation();\n  const slideControls = useAnimation();\n\n  const ref = useRef(null);\n  const isInView = useInView(ref, { once: true });\n\n  useEffect(() => {\n    if (isInView) {\n      slideControls.start(\"visible\");\n      mainControls.start(\"visible\");\n    } else {\n      slideControls.start(\"hidden\");\n      mainControls.start(\"hidden\");\n    }\n  }, [isInView, mainControls, slideControls]);\n\n  return (\n    <div ref={ref} style={{ position: \"relative\", width, overflow: \"hidden\" }}>\n      <motion.div\n        variants={{\n          hidden: { opacity: 0, y: 75 },\n          visible: { opacity: 1, y: 0 },\n        }}\n        initial=\"hidden\"\n        animate={mainControls}\n        transition={{ duration: duration ? duration : 0.5, delay: 0.25 }}\n      >\n        {children}\n      </motion.div>\n\n      <motion.div\n        variants={{\n          hidden: { left: 0 },\n          visible: { left: \"100%\" },\n        }}\n        initial=\"hidden\"\n        animate={slideControls}\n        transition={{ duration: duration ? duration : 0.5, ease: \"easeIn\" }}\n        style={{\n          position: \"absolute\",\n          top: 4,\n          bottom: 4,\n          left: 0,\n          right: 0,\n          zIndex: 20,\n          background: boxColor ? boxColor : \"#5046e6\",\n        }}\n      />\n    </div>\n  );\n};\n\nexport default BoxReveal;\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}