{
  "name": "terminal",
  "type": "registry:ui",
  "dependencies": [
    "motion"
  ],
  "files": [
    {
      "path": "magicui/terminal.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport { motion } from \"motion/react\";\nimport { useEffect, useState } from \"react\";\n\ninterface AnimatedSpanProps {\n  children: React.ReactNode;\n  delay?: number;\n  className?: string;\n}\n\nexport const AnimatedSpan = ({\n  children,\n  delay = 0,\n  className,\n}: AnimatedSpanProps) => (\n  <motion.div\n    initial={{ opacity: 0, y: -5 }}\n    animate={{ opacity: 1, y: 0 }}\n    transition={{ duration: 0.3, delay }}\n    className={cn(\"font-regular grid font-mono text-sm\", className)}\n  >\n    {children}\n  </motion.div>\n);\n\ninterface TerminalProps {\n  typingText?: string;\n  children: React.ReactNode;\n  className?: string;\n  duration?: number;\n}\n\nexport const Terminal = ({\n  typingText = \"Create Magical Landing Pages\",\n  children,\n  className,\n  duration = 100,\n}: TerminalProps) => {\n  const [displayedText, setDisplayedText] = useState(\"\");\n  const [typingComplete, setTypingComplete] = useState(false);\n\n  useEffect(() => {\n    let i = 0;\n    let completed = false;\n\n    const typingEffect = setInterval(() => {\n      if (i < typingText.length) {\n        setDisplayedText(typingText.substring(0, i + 1));\n        i++;\n      } else {\n        clearInterval(typingEffect);\n        if (!completed) {\n          completed = true;\n          setTypingComplete(true);\n        }\n      }\n    }, duration);\n\n    return () => clearInterval(typingEffect);\n  }, [typingText, duration]);\n\n  return (\n    <div\n      className={cn(\n        \"z-0 min-h-[300px] w-full max-w-lg rounded-xl border border-border bg-background\",\n        className,\n      )}\n    >\n      <div className=\"flex flex-col gap-y-2 border-b border-border p-4\">\n        <div className=\"flex flex-row gap-x-2\">\n          <div className=\"h-2 w-2 rounded-full bg-red-500\"></div>\n          <div className=\"h-2 w-2 rounded-full bg-yellow-500\"></div>\n          <div className=\"h-2 w-2 rounded-full bg-green-500\"></div>\n        </div>\n      </div>\n      <pre className=\"p-4\">\n        <code className=\"grid\">\n          <div className=\"font-regular font-mono text-sm\">{displayedText}</div>\n          {typingComplete && <div className=\"grid pt-5\">{children}</div>}\n        </code>\n      </pre>\n    </div>\n  );\n};\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}