{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "blur-fade-demo",
  "type": "registry:example",
  "title": "Blur Fade Demo",
  "description": "Example showing blur fade in and out animations.",
  "registryDependencies": [
    "https://magicui.design/r/blur-fade"
  ],
  "files": [
    {
      "path": "registry/example/blur-fade-demo.tsx",
      "content": "/* eslint-disable @next/next/no-img-element */\nimport { BlurFade } from \"@/components/magicui/blur-fade\";\n\nconst images = Array.from({ length: 9 }, (_, i) => {\n  const isLandscape = i % 2 === 0;\n  const width = isLandscape ? 800 : 600;\n  const height = isLandscape ? 600 : 800;\n  return `https://picsum.photos/seed/${i + 1}/${width}/${height}`;\n});\n\nexport default function BlurFadeDemo() {\n  return (\n    <section id=\"photos\">\n      <div className=\"columns-2 gap-4 sm:columns-3\">\n        {images.map((imageUrl, idx) => (\n          <BlurFade key={imageUrl} delay={0.25 + idx * 0.05} inView>\n            <img\n              className=\"mb-4 size-full rounded-lg object-contain\"\n              src={imageUrl}\n              alt={`Random stock image ${idx + 1}`}\n            />\n          </BlurFade>\n        ))}\n      </div>\n    </section>\n  );\n}\n",
      "type": "registry:example",
      "target": "components/blur-fade-demo.tsx"
    },
    {
      "path": "registry/magicui/blur-fade.tsx",
      "content": "\"use client\";\n\nimport {\n  AnimatePresence,\n  motion,\n  useInView,\n  UseInViewOptions,\n  Variants,\n} from \"motion/react\";\nimport { useRef } from \"react\";\n\ntype MarginType = UseInViewOptions[\"margin\"];\n\ninterface BlurFadeProps {\n  children: React.ReactNode;\n  className?: string;\n  variant?: {\n    hidden: { y: number };\n    visible: { y: number };\n  };\n  duration?: number;\n  delay?: number;\n  offset?: number;\n  direction?: \"up\" | \"down\" | \"left\" | \"right\";\n  inView?: boolean;\n  inViewMargin?: MarginType;\n  blur?: string;\n}\n\nexport function BlurFade({\n  children,\n  className,\n  variant,\n  duration = 0.4,\n  delay = 0,\n  offset = 6,\n  direction = \"down\",\n  inView = false,\n  inViewMargin = \"-50px\",\n  blur = \"6px\",\n}: BlurFadeProps) {\n  const ref = useRef(null);\n  const inViewResult = useInView(ref, { once: true, margin: inViewMargin });\n  const isInView = !inView || inViewResult;\n  const defaultVariants: Variants = {\n    hidden: {\n      [direction === \"left\" || direction === \"right\" ? \"x\" : \"y\"]:\n        direction === \"right\" || direction === \"down\" ? -offset : offset,\n      opacity: 0,\n      filter: `blur(${blur})`,\n    },\n    visible: {\n      [direction === \"left\" || direction === \"right\" ? \"x\" : \"y\"]: 0,\n      opacity: 1,\n      filter: `blur(0px)`,\n    },\n  };\n  const combinedVariants = variant || defaultVariants;\n  return (\n    <AnimatePresence>\n      <motion.div\n        ref={ref}\n        initial=\"hidden\"\n        animate={isInView ? \"visible\" : \"hidden\"}\n        exit=\"hidden\"\n        variants={combinedVariants}\n        transition={{\n          delay: 0.04 + delay,\n          duration,\n          ease: \"easeOut\",\n        }}\n        className={className}\n      >\n        {children}\n      </motion.div>\n    </AnimatePresence>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/magicui/blur-fade.tsx"
    }
  ]
}