{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "terminal-demo",
  "type": "registry:example",
  "title": "Terminal Demo",
  "description": "Example showing a terminal with animated text.",
  "registryDependencies": [
    "https://magicui.design/r/terminal"
  ],
  "files": [
    {
      "path": "registry/example/terminal-demo.tsx",
      "content": "import {\n  AnimatedSpan,\n  Terminal,\n  TypingAnimation,\n} from \"@/components/magicui/terminal\";\n\nexport default function TerminalDemo() {\n  return (\n    <Terminal>\n      <TypingAnimation>&gt; pnpm dlx shadcn@latest init</TypingAnimation>\n\n      <AnimatedSpan delay={1500} className=\"text-green-500\">\n        <span>✔ Preflight checks.</span>\n      </AnimatedSpan>\n\n      <AnimatedSpan delay={2000} className=\"text-green-500\">\n        <span>✔ Verifying framework. Found Next.js.</span>\n      </AnimatedSpan>\n\n      <AnimatedSpan delay={2500} className=\"text-green-500\">\n        <span>✔ Validating Tailwind CSS.</span>\n      </AnimatedSpan>\n\n      <AnimatedSpan delay={3000} className=\"text-green-500\">\n        <span>✔ Validating import alias.</span>\n      </AnimatedSpan>\n\n      <AnimatedSpan delay={3500} className=\"text-green-500\">\n        <span>✔ Writing components.json.</span>\n      </AnimatedSpan>\n\n      <AnimatedSpan delay={4000} className=\"text-green-500\">\n        <span>✔ Checking registry.</span>\n      </AnimatedSpan>\n\n      <AnimatedSpan delay={4500} className=\"text-green-500\">\n        <span>✔ Updating tailwind.config.ts</span>\n      </AnimatedSpan>\n\n      <AnimatedSpan delay={5000} className=\"text-green-500\">\n        <span>✔ Updating app/globals.css</span>\n      </AnimatedSpan>\n\n      <AnimatedSpan delay={5500} className=\"text-green-500\">\n        <span>✔ Installing dependencies.</span>\n      </AnimatedSpan>\n\n      <AnimatedSpan delay={6000} className=\"text-blue-500\">\n        <span>ℹ Updated 1 file:</span>\n        <span className=\"pl-2\">- lib/utils.ts</span>\n      </AnimatedSpan>\n\n      <TypingAnimation delay={6500} className=\"text-muted-foreground\">\n        Success! Project initialization completed.\n      </TypingAnimation>\n\n      <TypingAnimation delay={7000} className=\"text-muted-foreground\">\n        You may now add components.\n      </TypingAnimation>\n    </Terminal>\n  );\n}\n",
      "type": "registry:example",
      "target": "components/terminal-demo.tsx"
    },
    {
      "path": "registry/magicui/terminal.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport { motion, MotionProps } from \"motion/react\";\nimport { useEffect, useRef, useState } from \"react\";\n\ninterface AnimatedSpanProps extends MotionProps {\n  children: React.ReactNode;\n  delay?: number;\n  className?: string;\n}\n\nexport const AnimatedSpan = ({\n  children,\n  delay = 0,\n  className,\n  ...props\n}: AnimatedSpanProps) => (\n  <motion.div\n    initial={{ opacity: 0, y: -5 }}\n    animate={{ opacity: 1, y: 0 }}\n    transition={{ duration: 0.3, delay: delay / 1000 }}\n    className={cn(\"grid text-sm font-normal tracking-tight\", className)}\n    {...props}\n  >\n    {children}\n  </motion.div>\n);\n\ninterface TypingAnimationProps extends MotionProps {\n  children: string;\n  className?: string;\n  duration?: number;\n  delay?: number;\n  as?: React.ElementType;\n}\n\nexport const TypingAnimation = ({\n  children,\n  className,\n  duration = 60,\n  delay = 0,\n  as: Component = \"span\",\n  ...props\n}: TypingAnimationProps) => {\n  if (typeof children !== \"string\") {\n    throw new Error(\"TypingAnimation: children must be a string. Received:\");\n  }\n\n  const MotionComponent = motion.create(Component, {\n    forwardMotionProps: true,\n  });\n\n  const [displayedText, setDisplayedText] = useState<string>(\"\");\n  const [started, setStarted] = useState(false);\n  const elementRef = useRef<HTMLElement | null>(null);\n\n  useEffect(() => {\n    const startTimeout = setTimeout(() => {\n      setStarted(true);\n    }, delay);\n    return () => clearTimeout(startTimeout);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!started) return;\n\n    let i = 0;\n    const typingEffect = setInterval(() => {\n      if (i < children.length) {\n        setDisplayedText(children.substring(0, i + 1));\n        i++;\n      } else {\n        clearInterval(typingEffect);\n      }\n    }, duration);\n\n    return () => {\n      clearInterval(typingEffect);\n    };\n  }, [children, duration, started]);\n\n  return (\n    <MotionComponent\n      ref={elementRef}\n      className={cn(\"text-sm font-normal tracking-tight\", className)}\n      {...props}\n    >\n      {displayedText}\n    </MotionComponent>\n  );\n};\n\ninterface TerminalProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const Terminal = ({ children, className }: TerminalProps) => {\n  return (\n    <div\n      className={cn(\n        \"z-0 h-full max-h-[400px] w-full max-w-lg rounded-xl border border-border bg-background\",\n        className,\n      )}\n    >\n      <div className=\"flex flex-col gap-y-2 border-b border-border p-4\">\n        <div className=\"flex flex-row gap-x-2\">\n          <div className=\"h-2 w-2 rounded-full bg-red-500\"></div>\n          <div className=\"h-2 w-2 rounded-full bg-yellow-500\"></div>\n          <div className=\"h-2 w-2 rounded-full bg-green-500\"></div>\n        </div>\n      </div>\n      <pre className=\"p-4\">\n        <code className=\"grid gap-y-1 overflow-auto\">{children}</code>\n      </pre>\n    </div>\n  );\n};\n",
      "type": "registry:ui",
      "target": "components/magicui/terminal.tsx"
    }
  ]
}